//
//  ViewController04_RedirectViewController.m
//  NXNavigationExtensionDemo
//
//  Created by Leo Lee on 2020/10/27.
//

#import <NXNavigationExtension/NXNavigationExtension.h>

#import "ViewController04_RedirectViewController.h"
#import "ViewController01_Test.h"
#import "ViewController02_Test.h"
#import "ViewController03_Test.h"
#import "ViewController04_Test.h"
#import "ViewController05_Test.h"
#import "HierarchyViewController.h"
#import "RedirectViewControllerModel.h"

#import "UIColor+RandomColor.h"
#import "UITableViewCell+Enabled.h"

@interface ViewController04_RedirectViewController () <UITableViewDelegate, UITableViewDataSource>

@property (nonatomic, strong) UITableView *tableView;
@property (nonatomic, strong) NSArray<RedirectViewControllerModel *> *allModels;

@end

@implementation ViewController04_RedirectViewController

- (void)viewDidLoad {
    [super viewDidLoad];
    
    if (![NSStringFromClass([self class]) isEqualToString:NSStringFromClass([ViewController04_RedirectViewController class])]) {
        self.navigationItem.title = NSStringFromClass([self class]);
    }
    
    [self.view addSubview:self.tableView];
    
    [self.tableView.topAnchor constraintEqualToAnchor:self.view.topAnchor].active = YES;
    [self.tableView.leftAnchor constraintEqualToAnchor:self.view.leftAnchor].active = YES;
    [self.tableView.bottomAnchor constraintEqualToAnchor:self.view.bottomAnchor].active = YES;
    [self.tableView.rightAnchor constraintEqualToAnchor:self.view.rightAnchor].active = YES;
}

- (UIStatusBarStyle)preferredStatusBarStyle {
    return UIStatusBarStyleLightContent;
}

- (UIColor *)nx_navigationBarBackgroundColor {
    return self.randomColor;
}

- (UIColor *)nx_barTintColor {
    return [UIColor whiteColor];
}

- (NSDictionary<NSAttributedStringKey,id> *)nx_titleTextAttributes {
    return @{NSForegroundColorAttributeName: [self nx_barTintColor]};
}

- (BOOL)nx_backButtonMenuEnabled {
    return YES;
}

#pragma mark - Getter

- (UITableView *)tableView {
    if (!_tableView) {
        _tableView = [[UITableView alloc] initWithFrame:CGRectZero style:UITableViewStyleGrouped];
        _tableView.translatesAutoresizingMaskIntoConstraints = NO;
        _tableView.tableHeaderView = [[UIView alloc] init];
        _tableView.tableFooterView = [[UIView alloc] init];
        _tableView.delegate = self;
        _tableView.dataSource = self;
        [_tableView registerClass:[UITableViewCell class] forCellReuseIdentifier:NSStringFromClass([UITableViewCell class])];
    }
    return _tableView;
}

- (NSArray<RedirectViewControllerModel *> *)allModels {
    if (!_allModels) {
        _allModels = @[
            [RedirectViewControllerModel modelWithTitle:NSStringFromClass([ViewController01_Test class]) type:RedirectViewControllerTypeTest1],
            [RedirectViewControllerModel modelWithTitle:NSStringFromClass([ViewController02_Test class]) type:RedirectViewControllerTypeTest2],
            [RedirectViewControllerModel modelWithTitle:NSStringFromClass([ViewController03_Test class]) type:RedirectViewControllerTypeTest3],
            [RedirectViewControllerModel modelWithTitle:NSStringFromClass([ViewController04_Test class]) type:RedirectViewControllerTypeTest4],
            [RedirectViewControllerModel modelWithTitle:NSStringFromClass([ViewController05_Test class]) type:RedirectViewControllerTypeTest5],
            [RedirectViewControllerModel modelWithTitle:@"ÈÄâÊã©ÈúÄË¶ÅË∑≥ËΩ¨ÁöÑÊéßÂà∂Âô®Á±ªÂûã" type:RedirectViewControllerTypeChoose],
            [RedirectViewControllerModel modelWithTitle:@"‚≠êÔ∏èÈáçÂÆöÂêëÂà∞Ôºö" type:RedirectViewControllerTypeJump],
        ];
    }
    return _allModels;
}

#pragma mark - Private

- (void)setJumpViewControllerCellClickEnabled:(BOOL)enabled {
    for (RedirectViewControllerModel *model in self.allModels) {
        if (model.type == RedirectViewControllerTypeJump) {
            model.clickEnabled = YES;
        } else {
            model.clickEnabled = enabled;
        }
    }
    [self.tableView reloadData];
}

- (void)showChooseJumpViewController {
    __weak typeof(self) weakSelf = self;
    [HierarchyViewController showFromViewController:self
                                withViewControllers:self.navigationController.viewControllers
                                  completionHandler:^(__kindof UIViewController * _Nullable selectedViewController) {
        if (!selectedViewController || ![selectedViewController isKindOfClass:[UIViewController class]]) return;
        // ËÆæÁΩÆ Cell ‰∏çËÉΩÁÇπÂáª
        [weakSelf setJumpViewControllerCellClickEnabled:NO];
        [weakSelf.navigationController nx_redirectViewControllerClass:[selectedViewController class] initializeStandbyViewControllerBlock:^__kindof UIViewController * _Nonnull{
            UIViewController *vc = [[[selectedViewController class] alloc] init];
            vc.hidesBottomBarWhenPushed = YES;
            return vc;
        }];
    }];
}

#pragma mark - UITableViewDelegate & UITableViewDataSource

- (NSInteger)tableView:(UITableView *)tableView numberOfRowsInSection:(NSInteger)section {
    return self.allModels.count;
}

- (UITableViewCell *)tableView:(UITableView *)tableView cellForRowAtIndexPath:(NSIndexPath *)indexPath {
    UITableViewCell *cell = [tableView dequeueReusableCellWithIdentifier:NSStringFromClass([UITableViewCell class])];
    if (!cell) {
        cell = [[UITableViewCell alloc] initWithStyle:UITableViewCellStyleDefault reuseIdentifier:NSStringFromClass([UITableViewCell class])];
    }
    
    RedirectViewControllerModel *model = self.allModels[indexPath.row];
    [cell setCellClickEnabled:model.clickEnabled];
    
    cell.backgroundColor = nil;
    cell.textLabel.textColor = [UIColor customTextColor];
    if (model.type == RedirectViewControllerTypeChoose) {
        cell.textLabel.text = model.title;
        cell.accessoryType = UITableViewCellAccessoryNone;
    } else if (model.type == RedirectViewControllerTypeJump) {
        NSArray<__kindof UIViewController *> *viewControllers = self.navigationController.viewControllers;
        if (viewControllers.count < 2) {
            cell.textLabel.text = model.title;
        } else {
            __kindof UIViewController *redirectToViewController = viewControllers[viewControllers.count - 2];
            if ([redirectToViewController isKindOfClass:[BaseViewController class]]) {
                cell.backgroundColor = [(BaseViewController *)redirectToViewController randomColor];
            } else {
                cell.backgroundColor = nil;
            }
            NSString *title = redirectToViewController.navigationItem.title ?: NSStringFromClass([redirectToViewController class]);
            cell.textLabel.text = [NSString stringWithFormat:@"%@%@", model.title, title];
        }
        cell.accessoryType = UITableViewCellAccessoryNone;
    } else {
        cell.textLabel.text = [NSString stringWithFormat:@"ÁÇπÂáªË∑≥ËΩ¨: %@", model.title];
        cell.accessoryType = UITableViewCellAccessoryDisclosureIndicator;
    }
    
    return cell;
}

- (void)tableView:(UITableView *)tableView didSelectRowAtIndexPath:(NSIndexPath *)indexPath {
    [tableView deselectRowAtIndexPath:indexPath animated:YES];
    
    RedirectViewControllerModel *model = self.allModels[indexPath.row];
    if (model.type == RedirectViewControllerTypeChoose) {
        [self showChooseJumpViewController];
    } else if (model.type == RedirectViewControllerTypeJump) {
        // ËÆæÁΩÆ Cell ‰∏çËÉΩÁÇπÂáª
        [self setJumpViewControllerCellClickEnabled:YES];
        // Â¶ÇÊûú selectedViewController ÔºÅ= nil Â∞±‰ºöË∑≥ËΩ¨Âà∞ÂØπÂ∫îÁöÑËßÜÂõæÊéßÂà∂Âô®ÔºåÂèç‰πãÂàôËøîÂõû‰∏ä‰∏Ä‰∏™ÊéßÂà∂Âô®
        [self.navigationController popViewControllerAnimated:YES];
    } else {
        ViewController04_RedirectViewController *viewController = [[NSClassFromString(model.title) alloc] init];
        [self.navigationController pushViewController:viewController animated:YES];
    }
}

- (NSString *)tableView:(UITableView *)tableView titleForFooterInSection:(NSInteger)section {
    return @"ÂäüËÉΩüíâ:\n1.Ëá™ÂÆö‰πâË∑≥ËΩ¨Âà∞ÊåáÂÆöÊéßÂà∂Âô®Á±ªÂûã„ÄÇ\n2.Â¶ÇÊûúË∑≥ËΩ¨ÁöÑÊéßÂà∂Âô®Á±ªÂûã‰∏çÂ≠òÂú®Âàô‰ºöÂàõÂª∫‰∏Ä‰∏™Êñ∞ÁöÑÊéßÂà∂Âô®ÂØπË±°„ÄÇ\n3.ÁõÆÊ†áÊéßÂà∂Âô®Á±ªÂûãÈÄâÊã©Â•Ω‰πãÂêéÂèØ‰ª•ÁÇπÂáª‚ÄúËøîÂõûÊåâÈíÆËøîÂõû‚Äù„ÄÅ‚ÄúÊâãÂäøËøîÂõû‚ÄùÂíåÁÇπÂáª‚Äú‚≠êÔ∏èÈáçÂÆöÂêëÂà∞‚ÄùÔºåËøô 3 ÁßçÊñπÂºèÈÉΩÂèØ‰ª•ÂõûÂà∞ÈÄâÊã©Á±ªÂûãÁöÑÊâÄÂØπÂ∫îÁöÑÊü•ÊâæÂà∞ÁöÑÁ¨¨‰∏Ä‰∏™ËßÜÂõæÊéßÂà∂Âô®ÁöÑÂÆû‰æã‰∏≠„ÄÇ\n\nÊ≥®ÊÑè‚ö†Ô∏è:\n1.ÊéßÂà∂Âô®Á±ªÂûãÁöÑÊü•ÊâæËßÑÂàôÊòØ‰ªéÊ†àÔºàViewControllersÔºâÂâçÈù¢ÂæÄÂêéÈù¢Êü•ÊâæÁöÑÔºåÂè™‰ºöÂà§Êñ≠ÊòØÂê¶‰∏∫Âêå‰∏Ä‰∏™‚ÄúÁ±ª‚ÄùÔºåËÄåÈùûÂêå‰∏Ä‰∏™‚ÄúÂÆû‰æãÂØπË±°‚Äù„ÄÇÊü•ÊâæÂà∞ÂàôËøîÂõûÂØπÂ∫îÁöÑ‚ÄúÁ±ª‚ÄùÔºåÊü•Êâæ‰∏çÂà∞ÂàôÂàõÂª∫‰∏Ä‰∏™‚ÄúÊñ∞ÁöÑÊéßÂà∂Âô®ÂØπË±°ÂÆû‰æã‚Äù„ÄÇ\n2.Âú®‰∏çÂêåÁöÑÂØºËà™Ê†èÊéßÂà∂Âô®‰πãÈó¥‰∏çËÉΩË∑≥ËΩ¨ÔºåÂè™ÊúâÂú®Âêå‰∏Ä‰∏™ÂØºËà™Ê†èÊéßÂà∂Âô®‰∏≠Ë∑≥ËΩ¨ÂäüËÉΩÊâç‰ºöÁîüÊïà„ÄÇ";
}

- (CGFloat)tableView:(UITableView *)tableView heightForHeaderInSection:(NSInteger)section {
    return 0.0001;
}

@end
